{"ast":null,"code":"var _jsxFileName = \"C:\\\\PwC Assignment\\\\pwcassignment\\\\src\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport axios from 'axios';\nimport \"./map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoiemFpZGgiLCJhIjoiY2xjZDZwOThyMGF3aTN3cHU5bjhvNmgweiJ9.uoMkvDXyEXWsyDGDFrbgWQ';\nlet timer;\nexport default function Map() {\n  _s();\n  // const mapContainer = useRef(null);\n  // const map = useRef(null);\n  // const [lng, setLng] = useState(-70.9);\n  // const [lat, setLat] = useState(42.35);\n  // const [zoom, setZoom] = useState(9);\n\n  // useEffect(() => {\n  //     if (map.current) return; // initialize map only once\n  //     map.current = new mapboxgl.Map({\n  //       container: mapContainer.current,\n  //       style: 'mapbox://styles/mapbox/streets-v12',\n  //       center: [lng, lat],\n  //       zoom: zoom\n  //     });\n  //   });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [address, setAddress] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [longitude, setLongitude] = useState(null);\n  const [latitude, setLatitude] = useState(null);\n  function handleSubmit(event) {\n    event.preventDefault();\n    clearTimeout(timer);\n    timer = setTimeout(async () => {\n      // Make a request to the PositionStack Geocoding API\n      setIsLoading(true);\n      const response = await axios.get('http://api.positionstack.com/v1/forward', {\n        params: {\n          query: address,\n          access_key: 'f27595405146e81b0cc5bdb9ebb81552'\n        }\n      });\n\n      // Get the suggestions from the API\n      const suggestions = response.data.data;\n\n      // Update the state with the suggestions\n      setSuggestions(suggestions);\n      setIsLoading(false);\n    }, 500);\n  }\n  function handleSuggestionClick(suggestion) {\n    setAddress(suggestion.label);\n    setLongitude(suggestion.longitude);\n    setLatitude(suggestion.latitude);\n    setSuggestions([]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"address\",\n        name: \"address\",\n        value: city,\n        onChange: event => setCity(event.target.value),\n        placeholder: \"Enter an address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleSuggestionSelect(suggestion),\n          children: suggestion.formatted_address\n        }, suggestion.place_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"Qt0AufBBXE55JzxEFDc+/RivJQw=\");\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useRef","useEffect","useState","mapboxgl","axios","accessToken","timer","Map","isLoading","setIsLoading","address","setAddress","suggestions","setSuggestions","longitude","setLongitude","latitude","setLatitude","handleSubmit","event","preventDefault","clearTimeout","setTimeout","response","get","params","query","access_key","data","handleSuggestionClick","suggestion","label","city","setCity","target","value","length","map","handleSuggestionSelect","formatted_address","place_id"],"sources":["C:/PwC Assignment/pwcassignment/src/Map.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport axios from 'axios';\r\nimport \"./map.css\"\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiemFpZGgiLCJhIjoiY2xjZDZwOThyMGF3aTN3cHU5bjhvNmgweiJ9.uoMkvDXyEXWsyDGDFrbgWQ';\r\n      let timer;\r\n\r\nexport default function Map() {\r\n\r\n    // const mapContainer = useRef(null);\r\n    // const map = useRef(null);\r\n    // const [lng, setLng] = useState(-70.9);\r\n    // const [lat, setLat] = useState(42.35);\r\n    // const [zoom, setZoom] = useState(9);\r\n\r\n    // useEffect(() => {\r\n    //     if (map.current) return; // initialize map only once\r\n    //     map.current = new mapboxgl.Map({\r\n    //       container: mapContainer.current,\r\n    //       style: 'mapbox://styles/mapbox/streets-v12',\r\n    //       center: [lng, lat],\r\n    //       zoom: zoom\r\n    //     });\r\n    //   });\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [address, setAddress] = useState('');\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [longitude, setLongitude] = useState(null);\r\n    const [latitude, setLatitude] = useState(null);\r\n  \r\n     function handleSubmit(event) {\r\n      event.preventDefault();\r\n      clearTimeout(timer);\r\n      timer = setTimeout(async () => {\r\n           // Make a request to the PositionStack Geocoding API\r\n      setIsLoading(true);\r\n      const response = await axios.get('http://api.positionstack.com/v1/forward', {\r\n          params: {\r\n            query: address,\r\n            access_key: 'f27595405146e81b0cc5bdb9ebb81552'\r\n          }\r\n        });\r\n    \r\n        // Get the suggestions from the API\r\n        const suggestions = response.data.data;\r\n    \r\n        // Update the state with the suggestions\r\n        setSuggestions(suggestions);\r\n        setIsLoading(false)\r\n      }, 500);\r\n     \r\n    }\r\n  \r\n    function handleSuggestionClick(suggestion) {\r\n      setAddress(suggestion.label)\r\n      setLongitude(suggestion.longitude);\r\n      setLatitude(suggestion.latitude);\r\n      \r\n      setSuggestions([]);\r\n    }\r\n      return (\r\n    <div>\r\n    <form>\r\n    <label htmlFor=\"address\">Address:</label><br />\r\n    <input type=\"text\" id=\"address\" name=\"address\" value={city} onChange={event => setCity(event.target.value)} placeholder=\"Enter an address\" />\r\n    <button type=\"submit\">Search</button>\r\n    {suggestions.length > 0 && (\r\n        <ul>\r\n          {suggestions.map(suggestion => (\r\n            <li key={suggestion.place_id} onClick={() => handleSuggestionSelect(suggestion)}>\r\n              {suggestion.formatted_address}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n    )}\r\n  </form>\r\n\r\n  </div>\r\n      );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAA;AAElBD,QAAQ,CAACE,WAAW,GAAG,wFAAwF;AACzG,IAAIC,KAAK;AAEf,eAAe,SAASC,GAAG,GAAG;EAAA;EAE1B;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE7C,SAASgB,YAAY,CAACC,KAAK,EAAE;IAC5BA,KAAK,CAACC,cAAc,EAAE;IACtBC,YAAY,CAACf,KAAK,CAAC;IACnBA,KAAK,GAAGgB,UAAU,CAAC,YAAY;MAC1B;MACLb,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMc,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,yCAAyC,EAAE;QACxEC,MAAM,EAAE;UACNC,KAAK,EAAEhB,OAAO;UACdiB,UAAU,EAAE;QACd;MACF,CAAC,CAAC;;MAEF;MACA,MAAMf,WAAW,GAAGW,QAAQ,CAACK,IAAI,CAACA,IAAI;;MAEtC;MACAf,cAAc,CAACD,WAAW,CAAC;MAC3BH,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,GAAG,CAAC;EAET;EAEA,SAASoB,qBAAqB,CAACC,UAAU,EAAE;IACzCnB,UAAU,CAACmB,UAAU,CAACC,KAAK,CAAC;IAC5BhB,YAAY,CAACe,UAAU,CAAChB,SAAS,CAAC;IAClCG,WAAW,CAACa,UAAU,CAACd,QAAQ,CAAC;IAEhCH,cAAc,CAAC,EAAE,CAAC;EACpB;EACE,oBACF;IAAA,uBACA;MAAA,wBACA;QAAO,OAAO,EAAC,SAAS;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAM,eAC/C;QAAO,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,SAAS;QAAC,IAAI,EAAC,SAAS;QAAC,KAAK,EAAEmB,IAAK;QAAC,QAAQ,EAAEb,KAAK,IAAIc,OAAO,CAACd,KAAK,CAACe,MAAM,CAACC,KAAK,CAAE;QAAC,WAAW,EAAC;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAG,eAC7I;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS,EACpCvB,WAAW,CAACwB,MAAM,GAAG,CAAC,iBACnB;QAAA,UACGxB,WAAW,CAACyB,GAAG,CAACP,UAAU,iBACzB;UAA8B,OAAO,EAAE,MAAMQ,sBAAsB,CAACR,UAAU,CAAE;UAAA,UAC7EA,UAAU,CAACS;QAAiB,GADtBT,UAAU,CAACU,QAAQ;UAAA;UAAA;UAAA;QAAA,QAG7B;MAAC;QAAA;QAAA;QAAA;MAAA,QAEP;IAAA;MAAA;MAAA;MAAA;IAAA;EACI;IAAA;IAAA;IAAA;EAAA,QAED;AAER;AAAC,GAzEuBjC,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}